mPage = 0
    while(True):
        filePath = fileStart+str(mPage)+'PDF.txt'
        if(os.path.exists(filePath) and os.stat(filePath).st_size):
            fileR = open(filePath, 'r', encoding='utf-8')
            mTextSecondPDF = fileR.read()
            mStart = mTextSecondPDF.find(serviceNumbers[i])
            if(mStart != -1):
                fileR.close()
                break
            fileR.close()
        else:
            PDFFile = download_file(URL)
            PDF = pdfplumber.open(PDFFile)
            page = PDF.pages[mPage]
            mTextSecondPDF = page.extract_text()
            mStart = mTextSecondPDF.find(serviceNumbers[i])
            fileW = open(filePath, 'w', encoding='utf-8')
            fileW.writelines(mTextSecondPDF)
            fileW.close()
            if(mStart != -1):
                break
        mPage = mPage + 1

    mTable = 0
    while(True):
        filePath = fileStart+str(mPage)+'Table'+str(mTable)+'PDF.txt'
        # postoji opasnost da file nestane nakon cekiranja, pripazi !!
        if(os.path.exists(filePath) and os.stat(filePath).st_size):
            fileR = open(filePath, 'r', encoding='utf-8')
            lines = fileR.readlines()
            fileR.close()
            lines = [line.rstrip() for line in lines]
            found = False
            for line in lines:
                line = ast.literal_eval(line)
                #print(line)
                if(serviceNumbers[i] in line):
                    found = True
                    serviceLine = line
                    break
            if(found):
                break
            
        else:
            page = PDF.pages[mPage]
            tables = page.find_tables()
            table = tables[mTable].extract()
            fileW = open(filePath, 'w', encoding='utf-8')
            for mList in table:
                fileW.write(f"{mList}\n")
            fileW.close()
            found = False
            for serviceLine in table:
                if(serviceNumbers[i] in serviceLine):
                    found = True
                    break
            if(found):
                break
            
        mTable = mTable + 1